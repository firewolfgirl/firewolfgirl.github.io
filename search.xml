<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>七牛教程</title>
      <link href="/2018/10/17/%E4%B8%83%E7%89%9B%E6%95%99%E7%A8%8B/"/>
      <url>/2018/10/17/%E4%B8%83%E7%89%9B%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p><img src="http://pbztvgh31.bkt.clouddn.com/images/jpg/blogs/qiniuyun/%E4%B8%83%E7%89%9B%E6%95%99%E7%A8%8B/0.jpg" alt=""><br>大二暑假在一次项目中接触到七牛云（云服务平台），它的云存储服务感觉非常不错。现在重新整理总结其使用心得。<br><a id="more"></a></p><h2 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h2><p>不多说什么。</p><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p><img src="http://pbztvgh31.bkt.clouddn.com/images/jpg/blogs/qiniuyun/1/1.jpg" alt=""></p><h2 id="创建对象存储"><a href="#创建对象存储" class="headerlink" title="创建对象存储"></a>创建对象存储</h2><p><img src="http://pbztvgh31.bkt.clouddn.com/images/jpg/blogs/qiniuyun/1/2.jpg" alt=""><br><img src="http://pbztvgh31.bkt.clouddn.com/images/jpg/blogs/qiniuyun/1/3.jpg" alt=""></p><h2 id="查看创建好的空间"><a href="#查看创建好的空间" class="headerlink" title="查看创建好的空间"></a>查看创建好的空间</h2><p><img src="http://pbztvgh31.bkt.clouddn.com/images/jpg/blogs/qiniuyun/%E4%B8%83%E7%89%9B%E6%95%99%E7%A8%8B/4.jpg" alt=""></p><h2 id="文件上传，复制文件链接"><a href="#文件上传，复制文件链接" class="headerlink" title="文件上传，复制文件链接"></a>文件上传，复制文件链接</h2><p><img src="http://pbztvgh31.bkt.clouddn.com/images/jpg/blogs/qiniuyun/%E4%B8%83%E7%89%9B%E6%95%99%E7%A8%8B/5.jpg" alt=""><br><img src="http://pbztvgh31.bkt.clouddn.com/images/jpg/blogs/qiniuyun/%E4%B8%83%E7%89%9B%E6%95%99%E7%A8%8B/6.jpg" alt=""><br><img src="http://pbztvgh31.bkt.clouddn.com/images/jpg/blogs/qiniuyun/%E4%B8%83%E7%89%9B%E6%95%99%E7%A8%8B/7.jpg" alt=""></p><blockquote><p>此步不设置前缀也可，但推荐设置。原因如下：<br>众所周知， 七牛云存储的服务端是一个 key-value 系统，非树形结构，因此也就没有“目录”或者“文件夹”的概念。<br>如果文件很多，都混合在一起，那么对于它们的管理、查找与使用会很不方便。<br>那在七牛云如何模拟文件夹对文件进行分类呢？<br>管理控制台提供了一种模拟文件夹的手段：在资源名（Key）中使用“/”符号（斜杠符）。<br>也就是在上传时为所有文件指定一个前缀，以模拟出文件夹效果。这样，以后在查找你需要的文件时，可以使用前缀直接搜索。</p></blockquote><blockquote><p>图中说明：<br>    Images/jpg/blogs/qiniuyun/1/<br>    图片 jpg格式的  博客中的 关于七牛云的  第1篇博客的 </p><ul><li>Documents/word（txt）/   文档 格式</li><li>Videos   视频</li><li>Audios   音频</li></ul></blockquote><p><img src="http://pbztvgh31.bkt.clouddn.com/images/jpg/blogs/qiniuyun/%E4%B8%83%E7%89%9B%E6%95%99%E7%A8%8B/8.jpg" alt=""></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Hexo常用指令</title>
      <link href="/2018/10/10/Hexo%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
      <url>/2018/10/10/Hexo%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
      <content type="html"><![CDATA[<p>以下关于Hexo常用指令的整理，要想熟练使用一个工具，首先就要熟练掌握他的相关指令，以便操控这一工具。<br><a id="more"></a></p><h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new articleName</span><br></pre></td></tr></table></figure><blockquote><p>Note：</p></blockquote><ul><li>新建一篇题为“articleName”的文章，此时会在E/Hexo/source/_posts/目录下生成一份articleName.md 的文件，使用Notepad++、小书匠、MarkdownPad2等编辑工具打开即能书写；</li><li>提示信息：INFO Created: E:\Hexo\source_posts\articleName.md</li><li>如果标题包含空格，需要使用双引号括起来</li></ul><h2 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page pageName</span><br></pre></td></tr></table></figure><blockquote><p>Note：</p></blockquote><ul><li>新建一个题为“pageName”的页面，此时会在E:\Hexo\source\目录下生成一个名为pageName的文件夹，其中包含一份 index 的md文件；</li><li>提示信息：INFO Created: E:\Hexo\source\pageName\index.md</li><li>同样地，如果语句中包含空格，需要使用双引号括起来</li></ul><h2 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><blockquote><p>Note：</p></blockquote><ul><li>启动该条指令后会将当前网页的内容生成静态页面到public目录下</li><li>提示信息：<br>INFO Start processing<br>INFO Files loaded in 595 ms<br>INFO 0 files generated in 612 ms</li></ul><h2 id="开启本地服务器端口"><a href="#开启本地服务器端口" class="headerlink" title="开启本地服务器端口"></a>开启本地服务器端口</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><blockquote><p>Note：</p></blockquote><ul><li>开启预览访问的端口，默认端口为4000 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></li><li>关闭server使用 ctrl + c</li><li>提示信息：<br>INFO Start processing<br>INFO Hexo is running at <a href="http://0.0.0.0:4000/" target="_blank" rel="noopener">http://0.0.0.0:4000/</a>. Press Ctrl+C to stop.</li><li>在使用hexo server 可能会遇到端口被占用的情况，不妨使用以下指令来更改端口<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server -p 4001</span><br></pre></td></tr></table></figure></li></ul><h2 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><blockquote><p>Note：</p></blockquote><ul><li>将 E/Hexo/目录下的 .deploy_git 文件夹部署到Github</li><li>部署前需要预先 hexo generate 生成静态文件</li><li>提示信息：<br>INFO Deploying: git<br>INFO Clearing .deploy_git folder…<br>INFO Copying files from public folder…<br>…..部署的文件<br>To <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:HarbingWang/harbingwang.github.io.git<br>da818a3..e4e53c6 HEAD -&gt; master<br>INFO Deploy done: git # 当看到 “INFO Deploy done: git”时即表示部署已经完成；</li></ul><h2 id="清除文件"><a href="#清除文件" class="headerlink" title="清除文件"></a>清除文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><blockquote><p>Note：</p></blockquote><ul><li>清除E/Hexo目录下的缓存文件（db.json）和已经生成的静态文件（public）文件</li><li>网页正常情况下可以忽略此条命令</li></ul><h2 id="查看Hexo版本"><a href="#查看Hexo版本" class="headerlink" title="查看Hexo版本"></a>查看Hexo版本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo version</span><br></pre></td></tr></table></figure><blockquote><p>Note：</p></blockquote><ul><li>查看当前使用的Hexo的版本号</li><li>提示信息：<br>hexo: 3.2.0<br>hexo-cli: 1.0.1<br>os: Windows_NT 6.1.7601 win32 x64<br>http_parser: 2.6.2<br>node: 5.10.0<br>v8: 4.6.85.31<br>uv: 1.8.0<br>zlib: 1.2.8<br>ares: 1.10.1-DEV<br>icu: 56.1<br>modules: 47<br>openssl: 1.0.2g</li></ul><h2 id="复合指令"><a href="#复合指令" class="headerlink" title="复合指令"></a>复合指令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d   </span><br><span class="line">hexo s -d</span><br></pre></td></tr></table></figure><blockquote><p>Note：</p></blockquote><ul><li>hexo g -d # 等价于 hexo generate –deploy ：生成静态文件并部署</li><li>hexo s -d # 等价于 hexo deploy –generate ：开启预览并部署到Github</li></ul><h2 id="简写形式"><a href="#简写形式" class="headerlink" title="简写形式"></a>简写形式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo n #等价于 hexo new</span><br><span class="line">hexo g #等价于 hexo generate</span><br><span class="line">hexo s #等价于 hexo server</span><br><span class="line">hexo d #等价于 hexo deploy</span><br><span class="line">hexo v #等价于 hexo version</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog，Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Markdown常用通用基础语法实践</title>
      <link href="/2018/07/13/Markdown%E5%B8%B8%E7%94%A8%E9%80%9A%E7%94%A8%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E5%AE%9E%E8%B7%B5%20/"/>
      <url>/2018/07/13/Markdown%E5%B8%B8%E7%94%A8%E9%80%9A%E7%94%A8%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E5%AE%9E%E8%B7%B5%20/</url>
      <content type="html"><![CDATA[<p><img src="http://pbztvgh31.bkt.clouddn.com/images/jpg/blogs/qiniuyun/1/1.jpg" alt=""><br>上图是本篇博客的介绍图片，显示在首页增强美感，本句话也将显示在首页。<br>Markdown常用通用基础语法实践<br>只有把看到的东西输出实践了 才不至于真正写起来脑子一片空白 才是懂了。没事翻出来看看 加深印象。<br>GitHub上或者gitee上 难免要写一些readme等等的说明性文件，但是这样的文件一般都是.md的文件，编写的语法自然跟其他格式的文件有所区别。<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">- 一级分类</span><br><span class="line">- 二级分类</span><br></pre></td></tr></table></figure></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Markdown:</p><ul><li>是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</li><li>markdown其实就是一种简单的文本。</li><li>与普通的文本文件 (txt文件)不同的是:<ul><li>支持一些特殊的符号，通过特殊的符号来表示不同的语义，并且给予不同的样式。</li><li>同时普通的文本文件后缀是.txt,而markdown文件的后缀是.md。</li></ul></li><li>markdown 实现  的宗旨是<strong>易读易写</strong>。</li><li>通过特殊的符号实现一些基础的样式，而不同的符号也代表了不同的语义，例如#表示一级标题，##则表示二级标题。</li></ul><p>用markdown输出标题：</p><h1 id="一级标题title-（这是h1到h6）"><a href="#一级标题title-（这是h1到h6）" class="headerlink" title="一级标题title （这是h1到h6）"></a>一级标题title （这是h1到h6）</h1><h2 id="二级标题title"><a href="#二级标题title" class="headerlink" title="二级标题title"></a>二级标题title</h2><h3 id="三级标题title"><a href="#三级标题title" class="headerlink" title="三级标题title"></a>三级标题title</h3><h4 id="四级标题title"><a href="#四级标题title" class="headerlink" title="四级标题title"></a>四级标题title</h4><h5 id="五级标题title-一般用二级标题和三级标题即可，标题没有标号只是大小不同"><a href="#五级标题title-一般用二级标题和三级标题即可，标题没有标号只是大小不同" class="headerlink" title="五级标题title 一般用二级标题和三级标题即可，标题没有标号只是大小不同"></a>五级标题title 一般用二级标题和三级标题即可，标题没有标号只是大小不同</h5><h6 id="六级-h6"><a href="#六级-h6" class="headerlink" title="六级 h6"></a>六级 h6</h6><p>分隔符：就是一条横线。<br>在一行中用三个以上的<em>、-、_来建立一个分隔线，行内不能有其他东西。也可以在符号间插入空格。<br>分割线可以由</em> - _（星号，减号，底线）这3个符号的至少3个符号表示，注意至少要3个，且不需要连续，有空格也可以</p><hr><hr><hr><hr><p>前面有用到星号，建议用减号</p><p>文本样式：粗体和斜体常用于表示<strong>强调</strong><br>斜体：<br><em>斜体文本</em><br><em>斜体文本</em><br>粗体：<br>加粗就是是文字为粗体显示，可以使用下面两种方式表示：<br><strong>粗体文本</strong><br><strong>粗体文本</strong><br>斜粗体:<br><strong><em>斜粗体文本</em></strong> <em><strong>斜粗体文本</strong></em><br><em><strong>斜粗体文本</strong></em> <strong><em>斜粗体文本</em></strong><br>删除线:<br>文字有一条删除线的效果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~删除效果~~</span><br></pre></td></tr></table></figure></p><p><del>删除效果</del><br>高亮:<br>文字用醒目的高亮显示<br>这是<code>高亮文本</code>效果。</p><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><ul><li>\</li><li>`</li><li>~</li><li>*</li><li>_</li><li>-</li><li>+</li><li>.</li><li>!</li></ul><p>代码(框)<br>代码分为行内代码（单行用）和代码块（多行用）。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 行内代码使用 `代码` 标识，可嵌入文字中</span><br><span class="line">2. 代码块使用4个空格或```标识</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这里是代码</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3. 代码语法高亮在 ```后面加上语言名称即可</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这里是代码</span><br></pre></td></tr></table></figure><p>例如：</p><p>这是行内代码<code>onCreate(Bundle savedInstanceState)</code>的例子。</p><p>这是代码块和语法高亮：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码块<br>代码块就是将源码直接进行展示，可在开始的三反点后面加上代码语种名称。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"hello world!"</span>;</span><br><span class="line">alert(str);</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">somefunc</span><span class="params">(param1=<span class="string">''</span>, param2=<span class="number">0</span>)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> param1 &gt; param2: </span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Greater'</span></span><br><span class="line">    <span class="keyword">return</span> (param2 - param1 + <span class="number">1</span>) <span class="keyword">or</span> <span class="keyword">None</span></span><br></pre></td></tr></table></figure><p>图片<br>图片展示</p><blockquote><p><img src="图片地址" alt="图片加载失败时替代文字" title="图片的提示文字"></p></blockquote><p><img src="https://help.github.com/assets/images/site/favicon.ico" alt="图片加载失败时替代文字" title="logo"></p><p>链接<br>链接根据链接目标可分为站内站外链接，按照类型可分为文本链接和图片链接。<br>综上所述，可分为以下三种：<br>一.文本链接：给文本信息添加超链接<br>1.<a href="https://firewolfgirl.github.io/">https://firewolfgirl.github.io/</a><br>2.<a href="https://firewolfgirl.github.io/" title="firewolfgirl">文本链接</a>   <a href="https://firewolfgirl.github.io/">文本链接</a><br>3.</p><p>图片与链接：此处查看源文件理解回顾<br>图片与链接的语法很像，区别在一个 ! 号。二者格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">图片：![]()    ![图片文本(可忽略)](图片地址)</span><br><span class="line">链接：[]()     [链接文本](链接地址)</span><br></pre></td></tr></table></figure></p><p>链接又分为行内式、参考式和 自动链接：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">这是行内式链接：[fire wolf girl&apos;s Blog](https://firewolfgirl.github.io/)。</span><br><span class="line"></span><br><span class="line">这是参考式链接：[fire wolf girl&apos;s Blog][url]，其中url为链接标记，可置于文中任意位置。</span><br><span class="line"></span><br><span class="line">[url]: https://firewolfgirl.github.io/ &quot;fire wolf girl&apos;s Blog&quot;</span><br><span class="line"></span><br><span class="line">链接标记格式为：[链接标记文本]:  链接地址  链接title(可忽略)</span><br><span class="line"></span><br><span class="line">这是自动链接：直接使用`&lt;&gt;`括起来&lt;https://firewolfgirl.github.io/&gt;</span><br><span class="line"></span><br><span class="line">这是图片：![][avatar]</span><br><span class="line"></span><br><span class="line">[avatar]: https://connorlin.github.io/images/avatar.jpg</span><br></pre></td></tr></table></figure></p><p>效果如下：<br>这是行内式链接：<a href="https://firewolfgirl.github.io/">fire wolf girl’s Blog</a>。</p><p>这是参考式链接：<a href="https://firewolfgirl.github.io/" title="fire wolf girl&#39;s Blog">fire wolf girl’s Blog</a>，其中url为链接标记，可置于文中任意位置。</p><p>链接标记格式为：[链接标记文本]:  链接地址  链接title(可忽略)</p><p>这是自动链接：直接使用<code>&lt;&gt;</code>括起来<a href="https://firewolfgirl.github.io/">https://firewolfgirl.github.io/</a></p><p>这是图片：<img src="https://firewolfgirl.github.io/images/PinkPanther.jpg" alt=""></p><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><p>支持2种链接方式：行内式和参数式，不管是哪一种，链接文字都是用 [方括号] 来标记。</p><h3 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h3><p>[百度百科]（<a href="https://baike.baidu.com）是什么意思" target="_blank" rel="noopener">https://baike.baidu.com）是什么意思</a><br>上图可知，行内式的链接格式是：链接的文字放在[]中，链接地址放在随后的（）中，举一反三，经常出现的列表链接就应该这样写：</p><h3 id="下面是带链接的列表"><a href="#下面是带链接的列表" class="headerlink" title="下面是带链接的列表"></a>下面是带链接的列表</h3><ul><li><a href="https://baike.baidu.com" target="_blank" rel="noopener">百度百科</a></li><li><a href="https://www.baidu.com" target="_blank" rel="noopener">百度</a><br>链接还可以带title属性，好像也只能带title，带不了其他属性，注意，是链接地址后面空一格，然后用引号引起来,具体见上面示例。<h3 id="参数式的怎么写："><a href="#参数式的怎么写：" class="headerlink" title="参数式的怎么写："></a>参数式的怎么写：</h3></li></ul><p>这里是<a href="(https://baike.baidu.com)" title="名称">name</a>，这里是<a href="(https://www.baidu.com)" title="首页">home</a>，这里是<a href="(https://www.cnblogs.com/)" title="博客园">blog</a> </p><blockquote><p>注意中括号里的内容要一致，否则会出错。<br>理解：就是把链接当成参数，适合多出使用相同链接的场景，注意参数的对应关系，参数定义时，这3种写法都可以：<br>[foo]: <a href="http://example.com/" target="_blank" rel="noopener">http://example.com/</a> “Optional Title Here”<br>[foo]: <a href="http://example.com/" target="_blank" rel="noopener">http://example.com/</a> ‘Optional Title Here’<br>[foo]: <a href="http://example.com/" target="_blank" rel="noopener">http://example.com/</a> (Optional Title Here)<br>还支持这种写法，如果你不想混淆的话：<br>[foo]: <a href="http://example.com/" target="_blank" rel="noopener">http://example.com/</a> “Optional Title Here”</p></blockquote><p>其实还有一种隐式链接的写法，但是我觉得那种写法不直观，所以就不写了，经常用的一般就上面2种。</p><h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><p>图片也有2种方式：行内式和参数式，<br><img src="https://www.cnblogs.com/images/logo_small.gif" alt="我是图片"></p><p>参数式图片，这里是 <img src="https://www.cnblogs.com/images/logo_small.gif" alt="博客园"><br>用法跟链接的基本一样，唯一的不同就是，图片前面要写一个！（这是必须的），没什么好说的</p><p>列表:<br>列表分为有序和无序两种。</p><p>无序列表<br>无序列表有三种表示方法：* 、 + 和 -。<br>注意：下级在上级基础上前面多加两个空格，符号与内容直接有一个空格。<br>无序列表1：</p><ul><li>一级条目1</li><li>一级条目2<ul><li>二级条目1</li><li>二级条目2<ul><li>三级条目1</li><li>三级条目2</li><li>三级条目3</li></ul></li><li>二级条目3</li></ul></li><li>一级条目3</li></ul><p>在这里只演示一种，另外两种就是把 * 分别换成 + 和 - 。</p><p>有序列表<br>有序列表与无序列表类似，只不是是将前面的符号换成数字接着一个英文句点而已。</p><ol><li>一级条目1</li><li>一级条目2<ol><li>二级条目1</li></ol><ul><li>二级条目2<ul><li>三级条目1</li></ul><ul><li>三级条目2</li></ul><ul><li>三级条目3</li></ul></li></ul><ul><li>二级条目3</li></ul></li><li>一级条目3</li></ol><p>说明：<br>有序列表有自动纠错功能，当序号输入错误时，会自动更正显示序号。<br>有序列表可结合无序列表，只在第一个条目输入序号后，同级条目会自动编号。</p><p>引用<br>引用内容可以嵌套引用和使用其他语法，在引用内容后面空一行就表示引用结束。</p><blockquote><p>这是一段包含<strong>加粗</strong>的 _斜体_ 和 <em><strong>斜粗体</strong></em> 并带有<code>高亮</code>显示的一段文本来自<a href="https://firewolfgirl.github.io/" title="firewolfgirl">我的Github</a>。<br>区块引用内列表内容如下：</p><ul><li>内容1</li><li>内容2</li><li>内容3</li></ul></blockquote><p>反斜杠的作用<br>在markdown中，存在一些特殊的字符，具有一定的语法意义，例如#表示标题等等，那么在文字编辑的时候想要输出这些特殊的字符不能够直接输出，而是应该使用\转义。<br>如下：<br>#</p><blockquote><p>引用</p><blockquote><p>嵌套引用</p></blockquote></blockquote><p>表格:<br>表格对齐格式:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">居左：:----</span><br><span class="line">居中：:----:或-----</span><br><span class="line">居右：----:</span><br></pre></td></tr></table></figure></p><p>例子：</p><table><thead><tr><th style="text-align:left">标题</th><th style="text-align:center">标题</th><th style="text-align:right">标题</th></tr></thead><tbody><tr><td style="text-align:left">居左测试文本</td><td style="text-align:center">居中测试文本</td><td style="text-align:right">居右测试文本</td></tr><tr><td style="text-align:left">居左测试文本1</td><td style="text-align:center">居中测试文本2</td><td style="text-align:right">居右测试文本3</td></tr><tr><td style="text-align:left">居左测试文本11</td><td style="text-align:center">居中测试文本22</td><td style="text-align:right">居右测试文本33</td></tr><tr><td style="text-align:left">居左测试文本111</td><td style="text-align:center">居中测试文本222</td><td style="text-align:right">居右测试文本333</td></tr></tbody></table><p>表格的格式不一定要对的非常齐，但是为了好看，对齐肯定是最好的。<br>分割线后面的冒号表示对齐方式，写在左边表示左对齐，右边为右对齐，两边都写表示居中。</p><table><thead><tr><th>Tables</th><th>Are</th><th>Cool  </th></tr></thead><tbody><tr><td>col</td><td>right-aligned</td><td>$1600 </td></tr><tr><td>co</td><td>centered</td><td>$12 </td></tr><tr><td>zebra</td><td>are neat</td><td>$1 </td></tr></tbody></table><hr><table><thead><tr><th>Tables</th><th style="text-align:center">Are</th><th style="text-align:right">Cool</th></tr></thead><tbody><tr><td>col 3 is</td><td style="text-align:center">right-aligned</td><td style="text-align:right">$1600</td></tr><tr><td>col 2 is</td><td style="text-align:center">centered</td><td style="text-align:right">$12</td></tr><tr><td>zebra stripes</td><td style="text-align:center">are neat</td><td style="text-align:right">$1</td></tr></tbody></table><hr><p>引用:<br>引用以&gt;来表示，引用中支持多级引用、标题、列表、代码块、分割线等常规语法。<br>常见的引用写法：</p><blockquote><p>这是一段引用    //在<code>&gt;</code>后面有 1 个空格</p><pre><code>这是引用的代码块形式    //在`&gt;`后面有 5 个空格</code></pre><p>代码例子：</p><pre><code>protected void onCreate(Bundle savedInstanceState) {    super.onCreate(savedInstanceState);    setContentView(R.layout.activity_main);}</code></pre></blockquote><blockquote><p>一级引用</p><blockquote><p>二级引用</p><blockquote><p>三级引用</p></blockquote></blockquote></blockquote><p>上图可以看出，想要在上一次引用中嵌套一层引用，只需多加一个&gt;，理论上可以无限嵌套，我就不整那么多了，<br>注意：多层嵌套的&gt;是不需要连续在一起的，只要在一行就可以了，中间允许有空格，但是为了好看，还是把排版搞好吧</p><blockquote><h4 id="这是一个四级标题"><a href="#这是一个四级标题" class="headerlink" title="这是一个四级标题"></a>这是一个四级标题</h4><ol><li>这是第一行列表项</li><li>这是第二行列表项</li></ol></blockquote><blockquote><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><ul><li>书籍是人类进步的阶梯<blockquote><p>这是高尔基说的</p></blockquote></li><li>前方高能预警<blockquote><p>注意：这里是为了提醒前面有很刺激的事情发生，请做好准备</p></blockquote></li></ul></blockquote><hr><h3 id="下面内容是一些应用示例"><a href="#下面内容是一些应用示例" class="headerlink" title="下面内容是一些应用示例"></a>下面内容是一些应用示例</h3><hr><p>作者：seay<br>链接：<a href="https://www.jianshu.com/" target="_blank" rel="noopener">https://www.jianshu.com/</a><br>來源：简书</p><p>Markdown编辑器。特点概述：</p><ul><li><strong>功能丰富</strong> ：支持高亮代码块，工作学习好帮手；</li><li><strong>得心应手</strong> ：简洁高效的编辑器，支持移动端 Web；</li><li><strong>深度整合</strong> ：轻松管理。</li></ul><h2 id="Markdown简介"><a href="#Markdown简介" class="headerlink" title="Markdown简介"></a>Markdown简介</h2><blockquote><p>Markdown 是一种轻量级标记语言     <a href="https://zh.wikipedia.org/wiki/Markdown" target="_blank" rel="noopener">维基百科</a><br>它使用简单的符号标识不同的标题，将某些文字标记为<strong>粗体</strong>或者<em>斜体</em>，创建一个<a href="http://www.example.com" target="_blank" rel="noopener">链接</a>。 </p></blockquote><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><table><thead><tr><th style="text-align:left">Item</th><th style="text-align:right">Value</th><th style="text-align:center">Qty</th></tr></thead><tbody><tr><td style="text-align:left">Computer</td><td style="text-align:right">1600 USD</td><td style="text-align:center">5</td></tr><tr><td style="text-align:left">Phone</td><td style="text-align:right">12 USD</td><td style="text-align:center">12</td></tr><tr><td style="text-align:left">Pipe</td><td style="text-align:right">1 USD</td><td style="text-align:center">234</td></tr></tbody></table><h3 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h3><p>使用 <code>- [ ]</code> 和 <code>- [x]</code> 语法可以创建复选框，实现 todo-list 等功能。例如：</p><ul><li style="list-style: none"><input type="checkbox" checked> 已完成事项</li><li style="list-style: none"><input type="checkbox"> 待办事项1</li><li style="list-style: none"><input type="checkbox"> 待办事项2</li></ul><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><p>加粗    <code>Ctrl + B</code><br>插入图片    <code>Ctrl + G</code><br>插入链接    <code>Ctrl + L</code></p><p>需要<a href="maxiang.info/vip.html">续费</a></p><ul><li><p>微博：<a href="http://weibo.com/u/2788354117" target="_blank" rel="noopener">@马克飞象</a>，<a href="http://weibo.com/ggock" title="开发者个人账号" target="_blank" rel="noopener">@GGock</a></p></li><li><p>邮箱：<a href="mailto:&#104;&#x75;&#x73;&#116;&#103;&#111;&#x63;&#x6b;&#64;&#103;&#109;&#97;&#x69;&#108;&#46;&#x63;&#111;&#109;" target="_blank" rel="noopener">&#104;&#x75;&#x73;&#116;&#103;&#111;&#x63;&#x6b;&#64;&#103;&#109;&#97;&#x69;&#108;&#46;&#x63;&#111;&#109;</a></p></li></ul>]]></content>
      
      <categories>
          
          <category> blogs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/07/08/hello-world/"/>
      <url>/2018/07/08/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      <categories>
          
          <category> blogs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
